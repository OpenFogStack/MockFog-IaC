---

- name: install git, gcc, pip and iperf
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - git
      - python-pip
      - gcc
      - iproute-tc
      - iperf3
  tags: bootstrap

- name: clone MockFog-Agent to /opt
  git:
      repo: "{{ repo }}"
      dest: "{{ path }}"
      accept_hostkey: yes
      version: "{{ branch }}"
  tags: bootstrap

# workaround
- name: set permissions of agent repository for remote access
  command: chmod -R 777 /opt/mfog-agent
  tags: bootstrap

- name: install python3.6 (Ubuntu)
  include_tasks: ubuntu_python.yml
  when: ansible_distribution == 'Ubuntu'
  tags: bootstrap

- name: enable extra repositories for python3 (Amazon)
  shell: amazon-linux-extras enable python3
  tags: bootstrap
  when: ansible_distribution == 'Amazon'

- name: install python3 (Amazon)
  yum:
    name: python3
    state: latest
  tags: bootstrap
  when: ansible_distribution == 'Amazon'

- name: install python3-devel
  yum:
    name: python3-devel
    state: latest
  tags: bootstrap
  when: ansible_distribution == 'Amazon'

- name: install pip virtualenv
  pip:
    name: virtualenv
  tags: bootstrap

- name: creating the virtualenv for the agent
  pip:
      requirements: "{{ path }}/requirements.txt"
      virtualenv_python: python3
      virtualenv: "{{ path }}/.venv"
      state: present
  tags: bootstrap

- name: ensure configurations dir exists
  file:
    path: "{{ config_dir }}"
    state: directory
  tags: bootstrap

- name: write configuration file
  template:
      dest: "{{ config_file}}"
      src: agent.conf.j2
  tags: bootstrap

- name: write systemd service file
  template:
      dest: "/etc/systemd/system/{{ service_name}}.service"
      src: agent.systemd.j2
      mode: 0644
#  notify:
#    - enable MockFog Agent service
  tags: bootstrap

- name: enable MockFog Agent service
  systemd:
    name: "{{ service_name}}"
    state: started
  tags: bootstrap

- name: wait for the agents to be ready on port 5000
  wait_for:
    port: 5000
    host: "{{ inventory_hostname }}"
    delay: 5 
    timeout: 60
  tags: bootstrap

- name: Restart network service (fix broken name resolution)
  service:
    name: network
    state: restarted
  tags: bootstrap

- name: Inform NodeManager that the agents are installed
  mockfog_send_status:
    nodemanager: http://localhost:7474
    status: BOOTSTRAPPED
  delegate_to: localhost
  become: no
  tags: bootstrap
